:: StoryTitle
Ends & Tales


:: StoryData
{
	"ifid": "F9E39354-F641-4070-8B45-C337A3FDC8C9",
	"format": "SugarCube",
	"format-version": "2.36.1",
	"start": "beginning",
	"zoom": 0.6
}


:: Story Stylesheet [stylesheet]
@import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;600&display=swap");
@import url("styles/generics.css");
@import url("styles/styles.css");



:: Story JavaScript [script]
$('#ui-bar').remove();
$(document.head).find('#style-ui-bar').remove();

// MAKE MAP FUNCTION

setup.generateDirectionsMap = function (origin, destination, waypoints){
const {originLat,originLong,originName} = origin;
let waypointsString = "";
if (waypoints) {
waypointsString = `&waypoints=${waypoints}`
}

const iFrame = document.createElement("iframe")
iFrame.classList.add("map")
iFrame.setAttribute("loading", "lazy")
iFrame.setAttribute("referrerpolicy", "no-referrer-when-downgrade")
iFrame.setAttribute("src", `https://www.google.com/maps/embed/v1/directions?key=AIzaSyB7uJuBjDcK-tb0aJpTjaKA1ZNLWhEPN5M&center=${originLat},${originLong}&zoom=17&origin=${originName}&destination=${destination}${waypointsString}&mode=walking`)
const mount = document.getElementById("mapMount")
return iFrame

}

setup.generateDirectionsMapWP = function (origin, dest, wayp){
const iFrame = document.createElement("iframe")
iFrame.classList.add("map")
iFrame.setAttribute("loading", "lazy")
iFrame.setAttribute("referrerpolicy", "no-referrer-when-downgrade")
iFrame.setAttribute("src", `https://www.google.com/maps/embed/v1/directions?key=AIzaSyCSbMwR1cUMfnIAh0Pxi0F1N16kvDGZXGU&center=${origin[0]},${origin[1]}&zoom=18&origin=${origin[0]},${origin[1]}&destination=${dest[0]},${dest[1]}&waypoints=${wayp}&mode=walking`)
const mount = document.getElementById("mapMount")
return iFrame
}
// <<set $map = setup.generateDirectionsMapWP([53.1, 1.48], [52.3, 1.50], "Blah St | Blah Blah St")>>


setup.generateViewMap = function (origin, destination){
const {originName, originLat,originLong} = origin;

console.log("origin", origin)

const iFrame = document.createElement("iframe")
iFrame.classList.add("map")
iFrame.setAttribute("loading", "lazy")
iFrame.setAttribute("referrerpolicy", "no-referrer-when-downgrade")
iFrame.setAttribute("src", `https://www.google.com/maps/embed/v1/place?key=AIzaSyB7uJuBjDcK-tb0aJpTjaKA1ZNLWhEPN5M&center=${originLat},${originLong}&q=${originName}&zoom=17`)
const mount = document.getElementById("mapMount")

return iFrame
}




// TOUCHEVENTS 
// taken from https://developer.mozilla.org/en-US/docs/Web/API/Touch_events  
setup.startup = (playOnTouch) =>  {
  const ongoingTouches = [];

const handleStart = (evt) =>{
  evt.preventDefault();
  if (playOnTouch === true){
const audio = document.getElementById("audio");
const playpause = document.getElementById("playpause");
 audio.play();
 playpause.classList.add("playhighlight");

}
 const initial = document.getElementById("initial");
const reveal = document.getElementById("reveal");
     initial.classList.add("transparent");  
     reveal.classList.remove("transparent");  
}

const handleMove = (evt) => {
  evt.preventDefault();
  
}

const handleEnd = (evt) => {
  evt.preventDefault();
  // log("touchend");
  //  const initial = document.getElementById("initial");

  //    initial.classList.remove("transparent");  
  //    reveal.classList.add("transparent");  

  
}

const handleCancel = (evt) => {
  evt.preventDefault();
  // log("touchcancel.");
  const touches = evt.changedTouches;

  for (let i = 0; i < touches.length; i++) {
    let idx = ongoingTouchIndexById(touches[i].identifier);
    ongoingTouches.splice(idx, 1); // remove it; we're done
  }
}

function colorForTouch(touch) {
  // let r = touch.identifier % 16;
  // let g = Math.floor(touch.identifier / 3) % 16;
  // let b = Math.floor(touch.identifier / 7) % 16;
  // r = r.toString(16); // make it a hex digit
  // g = g.toString(16); // make it a hex digit
  // b = b.toString(16); // make it a hex digit
  // const color = `#${r}${g}${b}`;
    const color = `#666`;
  return color;
}


function copyTouch({ identifier, pageX, pageY }) {
  return { identifier, pageX, pageY };
}
function ongoingTouchIndexById(idToFind) {
  for (let i = 0; i < ongoingTouches.length; i++) {
    const id = ongoingTouches[i].identifier;

    if (id === idToFind) {
      return i;
    }
  }
  return -1; // not found
}

function log(msg) {
  const container = document.getElementById("log");
  container.textContent = `${msg} \n${container.textContent}`;
}

    const el = document.getElementById("initial");
  el.addEventListener("touchstart", handleStart);
  el.addEventListener("touchend", handleEnd);
  el.addEventListener("touchcancel", handleCancel);
  // el.addEventListener("touchmove", handleMove);
  // log("Initialized.", el);
}

// document.addEventListener("DOMContentLoaded", startup);


setup.play = () => {
 const audio = document.getElementById("audio")
 audio.play();
  }

setup.pause = () => {
 const audio = document.getElementById("audio")
 audio.pause();
  }

setup.showCap = () => {
    const track = document.getElementById("captrack")
    console.log(track)
track.mode = 'showing';
    document.getElementById("caption").style.visibility = "visible";
        document.getElementById("caption").classList.remove("hide")
  }

setup.hideCap = () => {
    const track = document.getElementById("captrack")
   track.mode = 'hidden';
    document.getElementById("caption").style.visibility = "hidden";
     document.getElementById("caption").classList.add("hide")
  }

setup.addThirty = () => {
  const audio = document.getElementById("audio")
  const timeHolder = audio.currentTime;
  audio.currentTime = timeHolder +30;  
  }


setup.backThirty = () => {
  const audio = document.getElementById("audio");
  const timeHolder = audio.currentTime;
  audio.currentTime = timeHolder -30;
  }



:: StoryInit {"position":"100,100","size":"100,100"}
/* <<cacheaudio "57" "assets/audio/57v2.mp3">> */

<<waitforaudio>>


:: header [nobr]{"position":"100,225","size":"100,100"}
<header class="standard">
<div class="header-item"></div>
<div class="header-item">
  <h1>$title</h1>
  <h3 class="subtitle">$location</h3>

<div class="multiple-icon-wrapper">
<<if $bathroom is true>>
 <div class="multiple-icon-item">
      <img src="assets/img/bathroom.png" >

    </div>
    <</if>>
    <<if $wifi is true>>
      <div class="multiple-icon-item">
      <img src="assets/img/wifi.png" >

    </div>
     <</if>>
    <<if $food is true>>
      <div class="multiple-icon-item">
      <img src="assets/img/food.png" >

    </div>
     <</if>>
    <<if $charge is true>>
      <div class="multiple-icon-item">
      <img src="assets/img/charge.png" >

    </div>
     <</if>>
    <<if $stepfree is true>>
      <div class="multiple-icon-item">
      <img src="assets/img/stepfree.png" >

    </div>
     <</if>>
    <<if $caution is true>>
     
      <div class="multiple-icon-item">
      <img src="assets/img/caution.png" >

    </div>
     <</if>>
</div>
</div >
</header>



:: headerstory [nobr]

<header class="story">
<<if $showBackwards is true>>
  <div class="nav-wrapper">
    <div class="nav-item">
        [img[Back|assets/img/back.png][$prevpass]]
    </div>
  </div>
  <</if>>

<div id="headerinstmount"></div>

<<if $showForwards is true>>
 
    <div class="nav-wrapper" id="forIcon">
    <div class="nav-item " >
         [img[Forward|assets/img/for.png][$nextpass]]
    </div>
  </div>

<</if>>

</header>

:: footer [nobr]{"position":"100,375","size":"100,100"}
<footer>
<<if $showBackwards is true>>
  <div class="nav-wrapper">
    <div class="nav-item">
        [img[Back|assets/img/back.png][$prevpass]]
    </div>
  </div>
  <</if>>

  <<if $showMap is true>>
    <div class="nav-wrapper">
      <div class="nav-item">
    <<link [img[assets/img/map.png]]>>
    <<toggleclass "#map" "hide">>
    <</link>>
    </div>
  </div>
  <</if>>
  <<if $showAudio is true>>
   <div class="nav-wrapper">
    <div class="nav-item">
 <<link [img[assets/img/play.png]]>><<replace "#audio">><p>[audio playing...]</p><</replace>><</link>>
   </div>
  </div>
  <</if>>
    <<if $showReplay is true>>
     <div class="nav-wrapper">
    <div class="nav-item">
    [img[Replay|assets/img/replay.png][$passage]]
    </div>
    </div>
    <</if>>

<<if $showForwards is true>>
    <div class="nav-wrapper" id="forIcon">
    <div class="nav-item">
         [img[Forward|assets/img/for.png][$nextpass]]
    </div>
  </div>
     <</if>>
</footer>


:: footerback [nobr]{"position":"100,375","size":"100,100"}
<footer>
  <div class="nav-wrapper">
    <div class="nav-item">
        [img[Back|assets/img/back.png][$prevpass]]
    </div>
  </div>
  <div class="nav-wrapper">
 
  </div>
  
</footer>

:: footerfor [nobr]{"position":"100,375","size":"100,100"}
<footer>
<div></div>
  <div class="nav-wrapper">
    <div class="nav-item">
        [img[Back|assets/img/for.png][$nextpass]]
    </div>
  </div>

  
</footer>




:: footerstory [nobr]
<footer>
<div class="nav-wrapper">
  <div class="nav-item">
    <<link "-30s">>
<<set $fn to setup.backThirty()>>
  <</link>>
  </div>
</div>

<div class="nav-wrapper playpause-wrapper">
  <div class="nav-item" id="playpause">
      <<link [img[assets/img/playpause.png]]>>
        <<if $playToggle is false>>
      <<set $fn to setup.play()>>
      <<set $playToggle to true>>
      <<addclass "#playpause" "playhighlight">>
      <<else>>
       <<set $fn to setup.pause()>>
        <<set $playToggle to false>>
      <<removeclass "#playpause" "playhighlight">>
      <</if>>
      <</link>>
  </div>
</div>

<div class="nav-wrapper">
  <div class="nav-item">
  <<link [img[assets/img/transcript.png]]>>
<<if $transcript is false>>
  <<set $transcript to true>>
  <<replace "#transcript">>
    <<include $transcriptname>>
  <</replace>>
  <<else>>
  <<set $transcript to false>>
  <<replace "#transcript">>
  <</replace>>
  <</if>>
  <</link>>
  </div>
</div>

<div class="nav-wrapper">
  <div class="nav-item">
    <<link "+30s">>
      <<set $fn to setup.addThirty()>>
  <</link>>
  </div>
</div>

</footer>

:: footerstorywalk [nobr]

<footer>


<div class="nav-wrapper">
  <div class="nav-item">
    <<link "-30s">>
<<set $fn to setup.backThirty()>>
  <</link>>
  </div>
</div>

<div class="nav-wrapper playpause-wrapper">
  <div class="nav-item" id="playpause">
      <<link [img[assets/img/playpause.png]]>>
        <<if $playToggle is false>>
      <<set $fn to setup.play()>>
      <<set $playToggle to true>>
      <<addclass "#playpause" "playhighlight">>
      <<else>>
       <<set $fn to setup.pause()>>
        <<set $playToggle to false>>
      <<removeclass "#playpause" "playhighlight">>
      <</if>>
      <</link>>
  </div>
</div>



<div class="nav-wrapper">
  <div class="nav-item">
  <<link [img[assets/img/transcript.png]]>>
<<if $transcript is false>>
  <<set $transcript to true>>
  <<replace "#transcript">>
    <<include $transcriptname>>
  <</replace>>
  <<else>>
  <<set $transcript to false>>
  <<replace "#transcript">>
  <</replace>>
  <</if>>
  <</link>>
  </div>
</div>
<div class="nav-wrapper">
  <div class="nav-item">
    <<link "+30s">>
      <<set $fn to setup.addThirty()>>
  <</link>>
  </div>
</div>

</footer>



:: footerMap [nobr]{"position":"100,375","size":"100,100"}
<footer>
  <div class="nav-wrapper">

    <div class="nav-item">
    <<link [img[assets/img/map.png]]>><<toggleclass "#map" "hide">><</link>>
        /* [img[Show Map|assets/img/map.png][toggleclass "#map" "hide"]] */
    </div></div>
     <div class="nav-wrapper">
    <div class="nav-item">
    <<link [img[assets/img/play.png]]>><<replace "#audio">><p>[audio playing...]</p><</replace>><</link>>
  
    </div>
    </div>
    <div class="nav-wrapper">
    <div class="nav-item">
    </div>
    <div class="nav-item">
        <<button "I've arrived">><<goto $nextpass>><</button>>
    </div>
  </div>
</footer>


:: beginning [nobr]  {"position":"700,175","size":"100,100"}
<<set $prevpass to "beginning">>
<<set $passage to "beginning">>
<<set $nextpass to "onboarding">>
<<set $openOrClosed to "closed">>
/* Menu Variables  */
<<set $transcript to false>>
<<set $playToggle to false>>
<<set $captionToggle to false>>
<<set $showForwards to true>>
<<set $showBackwards to false>>

<<set $showMap to false>>

<div class="comp-warning">Best experienced on a phone</div>
<main class="" id="">


    <<button "Start">><<goto $nextpass>><</button>>

</main>







:: onboarding [nobr]
<<set $prevpass to "beginning">>
<<set $passage to "onboarding">>
<<set $nextpass to "text">>
<<set $showMap to false>>
<<set $showAudio to false>>
<<set $showReplay to false>>
<<set $showForwards to true>>
<<set $showBackwards to true>>



<main class="instructions">
<h2>Onboarding</h2>
<div id="map" class="hide">$map</div>
<div id="mount"></div>
<<timed 0.1s>>
  <<replace "#mount">>
    <p>This icon takes you to a map <<link [img[assets/img/map.png]]>><<toggleclass "#map" "hide">><</link>></p>
  <</replace>>

<</timed>>
<<timed 2s>>
   <<append "#mount">>
<p>This arrow takes you back[img[Back|assets/img/back.png][$prevpass]]</p>
  <</append>>
<</timed>>
<<timed 4s>>
  <<append "#mount">>
<p>This arrow skips you forward [img[Forward|assets/img/for.png][$nextpass]]</p>
  <</append>>
    
<</timed>>
<<timed 6s>>
<<append "#mount">>
<p>You can replay with this icon   [img[Replay|assets/img/replay.png][$passage]]</p>
  <</append>>
<</timed>>
 <<timed 8s>>
  <<append "#mount">>
<p>To read a transcript of the audio press[img[Forward|assets/img/transcript.png][$nextpass]]</p>
  <</append>>

<</timed>>

 <<timed 10s>>
  <<append "#mount">>
<<button "Next">><<goto $nextpass>><</button>>
  <</append>>
<</timed>>
</main>
<<include "footer">>



:: text [nobr]

<<set $prevpass to "onboarding">>
<<set $passage to "text">>
<<set $nextpass to "duppyDetector">>
<<set $showMap to true>>
<<set $showAudio to false>>
<<set $showReplay to true>>
<<set $showForwards to true>>
<<set $showBackwards to true>>


<div id="audio"></div>
<div class="comp-warning">Best to experience on a phone</div>
<main class="instructions">

<div id="map" class="hide">$map</div>

<p>Text text</p>

<p>Text text</p>

<p>Text text</p>
<<button "Next">><<goto $nextpass>><</button>> 
 
</main>
<<include "footer">>


:: duppyDetector [nobr]

<<set $prevpass to "text">>
<<set $passage to "duppyDetector">>
<<set $nextpass to "unscramble">>
<<set $showMap to true>>
<<set $showAudio to false>>
<<set $showReplay to true>>
<<set $showForwards to true>>
<<set $showBackwards to true>>


<div id="audio"></div>
/* TODO CREATE SUPPY DETECTOR  */
<p>Duppy Detector</p>
The Duppy Detector appears with an icon of an archaic oil lamp  and is titled on screen. The icon is an oil lamp with a super radiance

I'm imagining that it's a button that the player presses which triggers a sound file and visual equivalent for hard-of-hearing audiences; it might be nice if it only played while the button were pressed and stopped/cued another file when released - which is new functionality I'd love to have in the code bank - but also it could be simpler given where we are...

The duppy detector beep/buzz on high volume when a duppy is near
Later it buzzes furiously
<<button "Next">><<goto $nextpass>><</button>> 
 
</main>
<<include "footer">>


:: unscramble [nobr]

<<set $prevpass to "duppyDetector">>
<<set $passage to "unscramble">>
<<set $nextpass to "longaudio">>
<<set $showMap to true>>
<<set $showAudio to false>>
<<set $showReplay to true>>
<<set $showForwards to true>>
<<set $showBackwards to true>>

/* TODO CREATE UNSCRAMBLE GAME  */
<div id="audio"></div>
<p>Duppy Detector</p>
ETNUHYPPUDAMAI


...Of course it’s I am a duppy Hunter.

<<button "Next">><<goto $nextpass>><</button>> 
 
</main>
<<include "footer">>


:: longaudio [nobr]  {"position":"700,175","size":"100,100"}
<<set $prevpass to "text">>
<<set $passage to "longaudio">>
<<set $nextpass to "end">>
<<set $transcript to false>>
<<set $playToggle to false>>
<<set $captionToggle to false>>
<<set $showForwards to true>>
<<set $showBackwards to true>>
<<set $showMap to false>>
<<set $sendOn to false>>
<<set $transcriptname to  "transcript">>
<<include "headerstory">>
<audio id="audio" autoplay>
  <source src="">
</audio>
<main class="story" id="storyContainer">
Long audio (not sure if we need)
<div id="transcript"></div>
<div id="mount"></div>
<<timed 0.1s>><<replace "#headerinstmount">><p class="comment"> To listen press <div class="inline-btn-wrapper">
<<link "play">>
        <<if $playToggle is false>>
      <<set $fn to setup.play()>>
      <<set $playToggle to true>>
      <<addclass "#playpause" "playhighlight">>
      <</if>>
<<replace "#headerinstmount">>
<p class="comment"> When you're finished listening, let me know <div class="inline-btn-wrapper"><<button "I'm finished">><<goto $nextpass>><</button>></div></p>
 <</replace>>
 <</link>>
  </div></p>
 <</replace>><</timed>>

 <<timed 30s>>
 <<replace "#headerinstmount">>
<p class="comment"> When you're finished listening, let me know <div class="inline-btn-wrapper"><<button "I'm finished">><<goto $nextpass>><</button>></div></p>
 <</replace>>

 <</timed>>

</main>



<<include "footerstory">>




:: transcript

<h2>Transcript Example</h2>

This is a transcript example



:: end [nobr]
<<set $prevpass to "longaudio">>
<<set $passage to "end">>
<<set $nextpass to "end">>
<<set $showMap to false>>
<<set $showAudio to false>>
<<set $showReplay to false>>
<<set $showBackwards to true>>
<<set $showForwards to false>>


<main class="end">
  end
</main>
<<include "footer">>





